{"ast":null,"code":"var _jsxFileName = \"D:\\\\HoneyPots\\\\CascadeProjects\\\\windsurf-project\\\\frontend\\\\src\\\\components\\\\HoneypotDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Paper, Card, CardContent, Grid, Box, Button, Chip, CircularProgress, Alert, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Switch, FormControlLabel } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HoneypotDashboard = () => {\n  _s();\n  const [honeypots, setHoneypots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchHoneypots = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('http://localhost:8000/honeypots');\n        setHoneypots(Object.entries(response.data).map(([id, data]) => ({\n          id,\n          ...data\n        })));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching honeypots:', err);\n        setError('Failed to fetch honeypots. Server might not be running.');\n        setLoading(false);\n      }\n    };\n    fetchHoneypots();\n    const interval = setInterval(fetchHoneypots, 30000); // Refresh every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Mock honeypots for demonstration when none are available\n  const mockHoneypots = [{\n    id: 'ssh-honeypot-1',\n    type: 'SSH',\n    status: 'Active',\n    ip: '192.168.1.10',\n    port: 22,\n    connections: 15,\n    last_activity: new Date().toISOString()\n  }, {\n    id: 'web-honeypot-1',\n    type: 'Web Server',\n    status: 'Active',\n    ip: '192.168.1.11',\n    port: 80,\n    connections: 32,\n    last_activity: new Date().toISOString()\n  }, {\n    id: 'ftp-honeypot-1',\n    type: 'FTP',\n    status: 'Inactive',\n    ip: '192.168.1.12',\n    port: 21,\n    connections: 5,\n    last_activity: new Date(Date.now() - 86400000).toISOString()\n  }, {\n    id: 'smb-honeypot-1',\n    type: 'SMB',\n    status: 'Active',\n    ip: '192.168.1.13',\n    port: 445,\n    connections: 8,\n    last_activity: new Date().toISOString()\n  }];\n  const displayHoneypots = honeypots.length > 0 ? honeypots : mockHoneypots;\n  const toggleHoneypotStatus = id => {\n    setHoneypots(prev => prev.map(hp => hp.id === id ? {\n      ...hp,\n      status: hp.status === 'Active' ? 'Inactive' : 'Active'\n    } : hp));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  }\n  const activeHoneypots = displayHoneypots.filter(hp => hp.status === 'Active').length;\n  const totalConnections = displayHoneypots.reduce((sum, hp) => sum + (hp.connections || 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Honeypot Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Total Honeypots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              children: displayHoneypots.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Active Honeypots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              color: \"success.main\",\n              children: activeHoneypots\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Inactive Honeypots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              color: \"error.main\",\n              children: displayHoneypots.length - activeHoneypots\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Total Connections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              children: totalConnections\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        justifyContent: 'flex-end'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Deploy New Honeypot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"IP Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Port\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Connections\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Last Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: displayHoneypots.map(honeypot => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: honeypot.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: honeypot.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: honeypot.ip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: honeypot.port\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Chip, {\n                label: honeypot.status,\n                color: honeypot.status === 'Active' ? 'success' : 'error',\n                size: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: honeypot.connections\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(honeypot.last_activity).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: honeypot.status === 'Active',\n                  onChange: () => toggleHoneypotStatus(honeypot.id),\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this),\n                label: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, honeypot.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(HoneypotDashboard, \"lE3b2WGoEBWq+WvUrP37gqzb704=\");\n_c = HoneypotDashboard;\nvar _c;\n$RefreshReg$(_c, \"HoneypotDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Paper","Card","CardContent","Grid","Box","Button","Chip","CircularProgress","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Switch","FormControlLabel","axios","jsxDEV","_jsxDEV","HoneypotDashboard","_s","honeypots","setHoneypots","loading","setLoading","error","setError","fetchHoneypots","response","get","Object","entries","data","map","id","err","console","interval","setInterval","clearInterval","mockHoneypots","type","status","ip","port","connections","last_activity","Date","toISOString","now","displayHoneypots","length","toggleHoneypotStatus","prev","hp","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","activeHoneypots","filter","totalConnections","reduce","sum","variant","gutterBottom","container","spacing","sx","mb","item","xs","md","color","component","honeypot","label","size","toLocaleString","control","checked","onChange","_c","$RefreshReg$"],"sources":["D:/HoneyPots/CascadeProjects/windsurf-project/frontend/src/components/HoneypotDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Typography, \n  Paper, \n  Card, \n  CardContent, \n  Grid, \n  Box,\n  Button,\n  Chip,\n  CircularProgress,\n  Alert,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Switch,\n  FormControlLabel\n} from '@mui/material';\nimport axios from 'axios';\n\nexport const HoneypotDashboard = () => {\n  const [honeypots, setHoneypots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    const fetchHoneypots = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get('http://localhost:8000/honeypots');\n        setHoneypots(Object.entries(response.data).map(([id, data]) => ({\n          id,\n          ...data\n        })));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching honeypots:', err);\n        setError('Failed to fetch honeypots. Server might not be running.');\n        setLoading(false);\n      }\n    };\n    \n    fetchHoneypots();\n    const interval = setInterval(fetchHoneypots, 30000); // Refresh every 30 seconds\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  // Mock honeypots for demonstration when none are available\n  const mockHoneypots = [\n    { \n      id: 'ssh-honeypot-1', \n      type: 'SSH', \n      status: 'Active', \n      ip: '192.168.1.10', \n      port: 22, \n      connections: 15, \n      last_activity: new Date().toISOString() \n    },\n    { \n      id: 'web-honeypot-1', \n      type: 'Web Server', \n      status: 'Active', \n      ip: '192.168.1.11', \n      port: 80, \n      connections: 32, \n      last_activity: new Date().toISOString() \n    },\n    { \n      id: 'ftp-honeypot-1', \n      type: 'FTP', \n      status: 'Inactive', \n      ip: '192.168.1.12', \n      port: 21, \n      connections: 5, \n      last_activity: new Date(Date.now() - 86400000).toISOString() \n    },\n    { \n      id: 'smb-honeypot-1', \n      type: 'SMB', \n      status: 'Active', \n      ip: '192.168.1.13', \n      port: 445, \n      connections: 8, \n      last_activity: new Date().toISOString() \n    }\n  ];\n  \n  const displayHoneypots = honeypots.length > 0 ? honeypots : mockHoneypots;\n  \n  const toggleHoneypotStatus = (id) => {\n    setHoneypots(prev => \n      prev.map(hp => \n        hp.id === id ? {...hp, status: hp.status === 'Active' ? 'Inactive' : 'Active'} : hp\n      )\n    );\n  };\n  \n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n  \n  if (error) {\n    return <Alert severity=\"error\">{error}</Alert>;\n  }\n  \n  const activeHoneypots = displayHoneypots.filter(hp => hp.status === 'Active').length;\n  const totalConnections = displayHoneypots.reduce((sum, hp) => sum + (hp.connections || 0), 0);\n  \n  return (\n    <div>\n      <Typography variant=\"h4\" gutterBottom>\n        Honeypot Management Dashboard\n      </Typography>\n      \n      <Grid container spacing={3} sx={{ mb: 4 }}>\n        <Grid item xs={12} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Total Honeypots\n              </Typography>\n              <Typography variant=\"h3\">\n                {displayHoneypots.length}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Active Honeypots\n              </Typography>\n              <Typography variant=\"h3\" color=\"success.main\">\n                {activeHoneypots}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Inactive Honeypots\n              </Typography>\n              <Typography variant=\"h3\" color=\"error.main\">\n                {displayHoneypots.length - activeHoneypots}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={3}>\n          <Card>\n            <CardContent>\n              <Typography color=\"textSecondary\" gutterBottom>\n                Total Connections\n              </Typography>\n              <Typography variant=\"h3\">\n                {totalConnections}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n      \n      <Box sx={{ mb: 3, display: 'flex', justifyContent: 'flex-end' }}>\n        <Button variant=\"contained\" color=\"primary\">\n          Deploy New Honeypot\n        </Button>\n      </Box>\n      \n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>IP Address</TableCell>\n              <TableCell>Port</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell>Connections</TableCell>\n              <TableCell>Last Activity</TableCell>\n              <TableCell>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {displayHoneypots.map((honeypot) => (\n              <TableRow key={honeypot.id}>\n                <TableCell>{honeypot.id}</TableCell>\n                <TableCell>{honeypot.type}</TableCell>\n                <TableCell>{honeypot.ip}</TableCell>\n                <TableCell>{honeypot.port}</TableCell>\n                <TableCell>\n                  <Chip \n                    label={honeypot.status} \n                    color={honeypot.status === 'Active' ? 'success' : 'error'} \n                    size=\"small\" \n                  />\n                </TableCell>\n                <TableCell>{honeypot.connections}</TableCell>\n                <TableCell>{new Date(honeypot.last_activity).toLocaleString()}</TableCell>\n                <TableCell>\n                  <FormControlLabel\n                    control={\n                      <Switch \n                        checked={honeypot.status === 'Active'}\n                        onChange={() => toggleHoneypotStatus(honeypot.id)}\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"\"\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}