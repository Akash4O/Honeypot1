{"ast":null,"code":"var _jsxFileName = \"D:\\\\HoneyPots\\\\CascadeProjects\\\\windsurf-project\\\\frontend\\\\src\\\\components\\\\AlertDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Card, CardContent, Grid, Box, Chip, Alert, CircularProgress, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlertDashboard = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastRefresh, setLastRefresh] = useState(null);\n\n  // Function to fetch alerts from the server\n  const fetchAlerts = async () => {\n    try {\n      setLoading(true);\n      console.log('Fetching alerts from server...');\n\n      // Add timeout to prevent infinite loading\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000);\n      const response = await axios.get('http://localhost:8000/alerts', {\n        signal: controller.signal,\n        timeout: 10000\n      });\n      clearTimeout(timeoutId);\n      setLastRefresh(new Date().toLocaleTimeString());\n      console.log('Alert response received:', response.data);\n\n      // Check if the response data is an array\n      if (Array.isArray(response.data)) {\n        setAlerts(response.data);\n        console.log(`Loaded ${response.data.length} alerts successfully`);\n      } else {\n        console.error('Invalid alert data format:', response.data);\n        setError('Received invalid data format from server. Expected an array of alerts.');\n      }\n    } catch (err) {\n      console.error('Error fetching alerts:', err);\n      if (err.code === 'ECONNABORTED' || err.name === 'AbortError') {\n        setError('Request timed out. The server may be overloaded or unresponsive.');\n      } else if (err.response) {\n        var _err$response$data;\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        setError(`Server error: ${err.response.status} - ${((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Unknown error'}`);\n      } else if (err.request) {\n        // The request was made but no response was received\n        setError('No response from server. Check if the backend is running at http://localhost:8000');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        setError(`Error: ${err.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Auto-refresh alerts every 10 seconds\n  useEffect(() => {\n    fetchAlerts();\n    const interval = setInterval(fetchAlerts, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  const getThreatLevel = alert => {\n    // Check if we have AI analysis threat level\n    if (alert.analysis && alert.analysis.threat_level_label) {\n      return alert.analysis.threat_level_label;\n    }\n\n    // Fallback to random threat level for demo purposes\n    const threatLevels = ['Low', 'Medium', 'High', 'Critical'];\n    const level = Math.floor(Math.random() * 4);\n    return threatLevels[level];\n  };\n  const getChipColor = threatLevel => {\n    switch (threatLevel) {\n      case 'Low':\n        return 'success';\n      case 'Medium':\n        return 'info';\n      case 'High':\n        return 'warning';\n      case 'Critical':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  const handleRefresh = () => {\n    fetchAlerts();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Threat Alerts Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleRefresh,\n          disabled: loading,\n          children: \"Refresh Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), lastRefresh && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          sx: {\n            ml: 2\n          },\n          children: [\"Last refreshed: \", lastRefresh]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '50px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginLeft: '20px'\n        },\n        children: \"Loading alerts from server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        p: 2,\n        bgcolor: \"#f5f5f5\",\n        borderRadius: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Troubleshooting Tips:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"1. Make sure the backend server is running (python start.py)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 75\n          }, this), \"2. Check that your honeypots are active (see logs in the logs/ directory)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 88\n          }, this), \"3. Ensure attack simulators are generating traffic to the correct ports (SSH: 2222, Web: 8080)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 109\n          }, this), \"4. Examine server logs for any errors in alert processing\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 72\n          }, this), \"5. Try running the diagnostic script: python check_alerts.py\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Total Alerts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                children: alerts.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Critical Alerts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                color: \"error\",\n                children: alerts.filter(alert => getThreatLevel(alert) === 'Critical').length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"High Alerts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                color: \"warning\",\n                children: alerts.filter(alert => getThreatLevel(alert) === 'High').length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                children: \"Unique IPs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                children: new Set(alerts.map(alert => {\n                  var _alert$data;\n                  return ((_alert$data = alert.data) === null || _alert$data === void 0 ? void 0 : _alert$data.source_ip) || '';\n                })).size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Timestamp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Honeypot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Source IP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Attack Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Threat Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: alerts.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6,\n                align: \"center\",\n                children: \"No alerts recorded yet. Honeypots are monitoring for activity.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this) : alerts.map((alert, index) => {\n              var _alert$data2, _alert$data3, _alert$data4;\n              const threatLevel = getThreatLevel(alert);\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: new Date(alert.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: alert.honeypot_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: ((_alert$data2 = alert.data) === null || _alert$data2 === void 0 ? void 0 : _alert$data2.source_ip) || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: ((_alert$data3 = alert.data) === null || _alert$data3 === void 0 ? void 0 : _alert$data3.attack_type) || 'Unknown'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Chip, {\n                    label: threatLevel,\n                    color: getChipColor(threatLevel),\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: (_alert$data4 = alert.data) !== null && _alert$data4 !== void 0 && _alert$data4.details ? JSON.stringify(alert.data.details).slice(0, 50) + '...' : 'No details available'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), alerts.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        p: 2,\n        bgcolor: \"#f5f5f5\",\n        borderRadius: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"System Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"\\u2705 Alerts are being successfully received and displayed\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 71\n          }, this), \"\\u2705 Both honeypots are active and generating data\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 64\n          }, this), \"\\u2705 AI analysis system is processing attack data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertDashboard, \"EHrfldoxACseALRDrWOy3pUPvyc=\");\n_c = AlertDashboard;\nexport default AlertDashboard;\nvar _c;\n$RefreshReg$(_c, \"AlertDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Card","CardContent","Grid","Box","Chip","Alert","CircularProgress","Button","axios","jsxDEV","_jsxDEV","AlertDashboard","_s","alerts","setAlerts","loading","setLoading","error","setError","lastRefresh","setLastRefresh","fetchAlerts","console","log","controller","AbortController","timeoutId","setTimeout","abort","response","get","signal","timeout","clearTimeout","Date","toLocaleTimeString","data","Array","isArray","length","err","code","name","_err$response$data","status","detail","request","message","interval","setInterval","clearInterval","getThreatLevel","alert","analysis","threat_level_label","threatLevels","level","Math","floor","random","getChipColor","threatLevel","handleRefresh","children","display","justifyContent","alignItems","mb","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","sx","ml","style","margin","marginLeft","severity","mt","p","bgcolor","borderRadius","container","spacing","item","xs","md","gutterBottom","filter","Set","map","_alert$data","source_ip","size","component","colSpan","align","index","_alert$data2","_alert$data3","_alert$data4","timestamp","toLocaleString","honeypot_id","attack_type","label","details","JSON","stringify","slice","_c","$RefreshReg$"],"sources":["D:/HoneyPots/CascadeProjects/windsurf-project/frontend/src/components/AlertDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Typography, \n  Paper, \n  Table, \n  TableBody, \n  TableCell, \n  TableContainer, \n  TableHead, \n  TableRow,\n  Card,\n  CardContent,\n  Grid,\n  Box,\n  Chip,\n  Alert,\n  CircularProgress,\n  Button\n} from '@mui/material';\nimport axios from 'axios';\n\nexport const AlertDashboard = () => {\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [lastRefresh, setLastRefresh] = useState(null);\n\n  // Function to fetch alerts from the server\n  const fetchAlerts = async () => {\n    try {\n      setLoading(true);\n      console.log('Fetching alerts from server...');\n      \n      // Add timeout to prevent infinite loading\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000);\n      \n      const response = await axios.get('http://localhost:8000/alerts', {\n        signal: controller.signal,\n        timeout: 10000\n      });\n      \n      clearTimeout(timeoutId);\n      setLastRefresh(new Date().toLocaleTimeString());\n      \n      console.log('Alert response received:', response.data);\n      \n      // Check if the response data is an array\n      if (Array.isArray(response.data)) {\n        setAlerts(response.data);\n        console.log(`Loaded ${response.data.length} alerts successfully`);\n      } else {\n        console.error('Invalid alert data format:', response.data);\n        setError('Received invalid data format from server. Expected an array of alerts.');\n      }\n      \n    } catch (err) {\n      console.error('Error fetching alerts:', err);\n      \n      if (err.code === 'ECONNABORTED' || err.name === 'AbortError') {\n        setError('Request timed out. The server may be overloaded or unresponsive.');\n      } else if (err.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        setError(`Server error: ${err.response.status} - ${err.response.data?.detail || 'Unknown error'}`);\n      } else if (err.request) {\n        // The request was made but no response was received\n        setError('No response from server. Check if the backend is running at http://localhost:8000');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        setError(`Error: ${err.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Auto-refresh alerts every 10 seconds\n  useEffect(() => {\n    fetchAlerts();\n    const interval = setInterval(fetchAlerts, 10000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const getThreatLevel = (alert) => {\n    // Check if we have AI analysis threat level\n    if (alert.analysis && alert.analysis.threat_level_label) {\n      return alert.analysis.threat_level_label;\n    }\n    \n    // Fallback to random threat level for demo purposes\n    const threatLevels = ['Low', 'Medium', 'High', 'Critical'];\n    const level = Math.floor(Math.random() * 4); \n    return threatLevels[level];\n  };\n  \n  const getChipColor = (threatLevel) => {\n    switch(threatLevel) {\n      case 'Low': return 'success';\n      case 'Medium': return 'info';\n      case 'High': return 'warning';\n      case 'Critical': return 'error';\n      default: return 'default';\n    }\n  };\n  \n  const handleRefresh = () => {\n    fetchAlerts();\n  };\n\n  return (\n    <div>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n        <Typography variant=\"h4\">Threat Alerts Dashboard</Typography>\n        <Box>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleRefresh} disabled={loading}>\n            Refresh Alerts\n          </Button>\n          {lastRefresh && (\n            <Typography variant=\"caption\" sx={{ ml: 2 }}>\n              Last refreshed: {lastRefresh}\n            </Typography>\n          )}\n        </Box>\n      </Box>\n      \n      {loading ? (\n        <div style={{ display: 'flex', justifyContent: 'center', margin: '50px 0' }}>\n          <CircularProgress />\n          <Typography variant=\"body1\" style={{ marginLeft: '20px' }}>\n            Loading alerts from server...\n          </Typography>\n        </div>\n      ) : error ? (\n        <div>\n          <Alert severity=\"error\">{error}</Alert>\n          <Box mt={2} p={2} bgcolor=\"#f5f5f5\" borderRadius={1}>\n            <Typography variant=\"h6\">Troubleshooting Tips:</Typography>\n            <Typography variant=\"body2\">\n              1. Make sure the backend server is running (python start.py)<br />\n              2. Check that your honeypots are active (see logs in the logs/ directory)<br />\n              3. Ensure attack simulators are generating traffic to the correct ports (SSH: 2222, Web: 8080)<br />\n              4. Examine server logs for any errors in alert processing<br />\n              5. Try running the diagnostic script: python check_alerts.py\n            </Typography>\n          </Box>\n        </div>\n      ) : (\n        <div>\n          <Grid container spacing={3} sx={{ mb: 4 }}>\n            <Grid item xs={12} md={3}>\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Total Alerts\n                  </Typography>\n                  <Typography variant=\"h3\">\n                    {alerts.length}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Critical Alerts\n                  </Typography>\n                  <Typography variant=\"h3\" color=\"error\">\n                    {alerts.filter(alert => getThreatLevel(alert) === 'Critical').length}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    High Alerts\n                  </Typography>\n                  <Typography variant=\"h3\" color=\"warning\">\n                    {alerts.filter(alert => getThreatLevel(alert) === 'High').length}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} md={3}>\n              <Card>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    Unique IPs\n                  </Typography>\n                  <Typography variant=\"h3\">\n                    {new Set(alerts.map(alert => alert.data?.source_ip || '')).size}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n          \n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Timestamp</TableCell>\n                  <TableCell>Honeypot</TableCell>\n                  <TableCell>Source IP</TableCell>\n                  <TableCell>Attack Type</TableCell>\n                  <TableCell>Threat Level</TableCell>\n                  <TableCell>Details</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {alerts.length === 0 ? (\n                  <TableRow>\n                    <TableCell colSpan={6} align=\"center\">\n                      No alerts recorded yet. Honeypots are monitoring for activity.\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  alerts.map((alert, index) => {\n                    const threatLevel = getThreatLevel(alert);\n                    return (\n                      <TableRow key={index}>\n                        <TableCell>{new Date(alert.timestamp).toLocaleString()}</TableCell>\n                        <TableCell>{alert.honeypot_id}</TableCell>\n                        <TableCell>{alert.data?.source_ip || 'Unknown'}</TableCell>\n                        <TableCell>{alert.data?.attack_type || 'Unknown'}</TableCell>\n                        <TableCell>\n                          <Chip \n                            label={threatLevel} \n                            color={getChipColor(threatLevel)} \n                            size=\"small\" \n                          />\n                        </TableCell>\n                        <TableCell>\n                          {alert.data?.details ? \n                            JSON.stringify(alert.data.details).slice(0, 50) + '...' : \n                            'No details available'}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          \n          {alerts.length > 0 && (\n            <Box mt={3} p={2} bgcolor=\"#f5f5f5\" borderRadius={1}>\n              <Typography variant=\"h6\">System Status:</Typography>\n              <Typography variant=\"body2\">\n                ✅ Alerts are being successfully received and displayed<br />\n                ✅ Both honeypots are active and generating data<br />\n                ✅ AI analysis system is processing attack data\n              </Typography>\n            </Box>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AlertDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}